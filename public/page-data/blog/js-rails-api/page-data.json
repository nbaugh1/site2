{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/blog/js-rails-api/","result":{"data":{"site":{"siteMetadata":{"title":"Nick Baughman, Software Developer","social":[{"name":"Twitter","url":"https://twitter.com/nbaugh1"},{"name":"GitHub","url":"https://github.com/nbaugh1"}]}},"blogPost":{"id":"f93a25a3-ed1e-5d24-81b3-7152a9d3c3f7","excerpt":"I’m just about to break out into the home stretch of my Flatiron School Software Engineering bootcamp. This is my 4th out of 5 portfolio…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Project 4: JavaScript/Rails API – Part I\",\n  \"date\": \"2019-10-09T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019m just about to break out into the home stretch of my Flatiron School Software Engineering bootcamp. This is my 4th out of 5 portfolio project. This module focused on finally learning how to build a full-stack web application with a JavaScript/HTML/CSS frontend and a Ruby on Rails API backend. My plan for my project is to build a single page application for a photography portfolio website. This will be a simple site that that will organize photos into albums. I\\u2019ve decide break this blog post into multiple posts during development, hopefully with each post focused on a specific part of the process or stack.\"), mdx(\"p\", null, \"I\\u2019ve made it a point throughout my previous projects to focus on a sort of secondary, self-assigned objective for each project. For my first project, a Ruby CLI Gem, I kept it simple and just made an effort to do a little extra within the assigned requirements. For my second project, a Sinatra CRUD app using MVC design, I decided to focus on working with adding extra elements provided with working with a CSS framework, in this case Materialize. I also decided to implement some of the scraping functions I learned in the first Module. For my third project, a Rails web app, I decided to focus on learning how to use git properly, specifically working with branches and making meaningful commit messages (I also built an API adapter and queried a third party external API, and used Bootstrap for my layouts). Now finally for this project, I plan to focus on documenting my code properly. This is something that I have 100% ignored up to this point.\"), mdx(\"p\", null, \"I\\u2019ve just started this project, setup a basic file structure, generated a new Rails API for the back end, and initialized a new git repo for the project. My next set is to start setting up my database. Time to get back to it.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/blog/js-rails-api/","title":"Project 4: JavaScript/Rails API – Part I","tags":[],"keywords":[],"date":"October 09, 2019"},"previous":{"id":"e14582fe-16d1-5bc8-8924-5fa4b95526dc","excerpt":"The task for our third module project in the Flatiron bootcamp is creating an app using Ruby on Rails. Rails is a framework that used the…","slug":"/blog/ruby-on-rails/","title":"Project 3: Ruby on Rails","date":"September 16, 2019"},"next":{"id":"639b42bf-d86b-5612-97c2-c1bd767e437f","excerpt":"My final Flatiron School Online Software Engineering Bootcamp capstone project, titled ReOrder, is a fullstack web application utilizing a…","slug":"/blog/react-redux-proect/","title":"Project 5: React/Redux Rails","date":"November 06, 2019"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"f93a25a3-ed1e-5d24-81b3-7152a9d3c3f7","previousId":"e14582fe-16d1-5bc8-8924-5fa4b95526dc","nextId":"639b42bf-d86b-5612-97c2-c1bd767e437f"}}}