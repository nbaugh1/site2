{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/blog/migrating-blog-to-gatsby-site/","result":{"data":{"site":{"siteMetadata":{"title":"Nick Baughman, Software Developer","social":[{"name":"Twitter","url":"https://twitter.com/nbaugh1"},{"name":"GitHub","url":"https://github.com/nbaugh1"}]}},"blogPost":{"id":"fd649806-810e-5b57-8422-5448abb6e2fd","excerpt":"During the process of building my personal website I decided that I wanted to display my blog posts as well. Having already started this…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Migrating Blog to Gatsby Site\",\n  \"date\": \"2020-01-25T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"During the process of building my personal website I decided that I wanted to display my blog posts as well. Having already started this blog and hosting it on WordPress, I figured the easy way to go about it would be to use the WordPress plugin to pull the data from this site and display it on my Gatsby site. This would be sort of a round about way of setting up a headless CMS. In order to uncomplicate the amount of workspaces that I deal with, and to organize my content into one domain, I changed course and decided to simply add the gatsby-theme-blog to my personal page, and migrate my posts from this site to my personal page.\"), mdx(\"p\", null, \"I manually added the blog theme to my site by running npm install \\u2014save gatsby-theme-blog. After that, as with most gatsby plugins, a but of configuration is required. The plugin needs to be added to the gatsby-config.js file. This is where the blog plugin settings for your blog path, content directory, assets and such can be set.\"), mdx(\"p\", null, \"From here, adding content to your blog is as easy as dropping a markdown file into your content/posts directory. After a bit of trial and error I realized that in order for your site to be to properly query your posts, you need at least one post with a title and date as well as some content body. The next step in this process for me is to hopefully just a bunch of copy and pasting to get my content from this site to my gatsby site.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/blog/migrating-blog-to-gatsby-site/","title":"Migrating Blog to Gatsby Site","tags":[],"keywords":[],"date":"January 25, 2020"},"previous":{"id":"a753d811-5714-5447-a346-81873e89ff56","excerpt":"One of the main features of Gatsby (a static site generator based on React) are Plugins. “Gatsby plugins are Node.js packages that implement…","slug":"/blog/gatsby-plugins-and-graphQL/","title":"Gatsby Plugins and GraphQL","date":"January 18, 2020"},"next":null},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"fd649806-810e-5b57-8422-5448abb6e2fd","previousId":"a753d811-5714-5447-a346-81873e89ff56"}}}