{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/blog/sinatra-CRUD-MVC/","result":{"data":{"site":{"siteMetadata":{"title":"Nick Baughman, Software Developer","social":[{"name":"Twitter","url":"https://twitter.com/nbaugh1"},{"name":"GitHub","url":"https://github.com/nbaugh1"}]}},"blogPost":{"id":"d55ba5a5-f2cf-58fb-bcf0-bb8a6c736369","excerpt":"For my Sinatra module portfolio project I decided to make an app to build a fantasy football team roster. The requirements for this project…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Project 2: Sinatra CRUD MVC\",\n  \"date\": \"2019-08-12T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For my Sinatra module portfolio project I decided to make an app to build a fantasy football team roster. The requirements for this project are as follows:\"), mdx(\"p\", null, \"Build an MVC Sinatra application.\\nUse ActiveRecord with Sinatra.\\nUse multiple models.\\nUse at least one has_many relationship on a User model and one belongs_to relationship on another model.\\nMust have user accounts \\u2013 users must be able to sign up, sign in, and sign out.\\nValidate uniqueness of user login attribute (username or email).\\nOnce logged in, a user must have the ability to create, read, update and destroy the resource that belongs_to user.\\nEnsure that users can edit and delete only their own resources \\u2013 not resources created by other users.\\nValidate user input so bad data cannot be persisted to the database.\\nBONUS: Display validation failures to user with error messages. (This is an optional feature, challenge yourself and give it a shot!\\nTo make this an MVC app I had to follow the Model View Controller convention for building Ruby web apps. For this module we learned how to use Sinatra and ActiveRecord to do just that. I used Corneal to build the basic scaffolding of my app and MaterializeCSS for the layout and styling.\"), mdx(\"p\", null, \"To get started I used Corneal to set up all of the basic file structure for the app. Corneal builds all of your basic models, controllers, views and configuration files and organizes them into their proper folders and structure.\"), mdx(\"p\", null, \"ActiveRecord was used to build and maintain the database and associations required for this app. For this app I created User, Team, Players and a League (for a yet to be added feature) classes. ActiveRecord takes care of storing the information needed to create instances of these classes as well as allows them to associate with other through has many and belongs to. A User has many teams and a team belongs to a User etc.\"), mdx(\"p\", null, \"This app features the ability for a user to sign up with a username and password, create a Fantasy Football Team with a name and a roster size, add players from a list of active NFL players to that team, drop players from their roster, create more than one team, view a fantasy team\\u2019s roster, a player profile page, edit a fantasy team\\u2019s name and roster size, delete a team, and log out.\"), mdx(\"p\", null, \"I still have a lot of this I want to do with this app since it is something I might find myself using in the up coming months for fantasy football season. I would like to do a lot of work on the layout and styling of the app since it is still pretty haphazard. Being pressed for time as per usual, I had to make sure to have the app meet the requirements of the assignment rather than spend too much time making it look nice. I\\u2019m planning on adding a much more detailed player profile page with data scraped from FantasySharks.com and more detailed team pages with data scraped from my actual fantasy football league homepage. I also plan on adding the ability to add teams to a league.\"), mdx(\"p\", null, \"github: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/nbaugh1/FFL_APP\"\n  }), \"https://github.com/nbaugh1/FFL_APP\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/blog/sinatra-CRUD-MVC/","title":"Project 2: Sinatra CRUD MVC","tags":[],"keywords":[],"date":"August 12, 2019"},"previous":{"id":"9b3878c0-1bdd-5fce-873c-11ebf0dd221d","excerpt":"For our first end of portfolio project we have been assigned to create a Ruby CLI Data Gem. \nI wanted the subject matter of my project to be…","slug":"/blog/ruby-cli-gem/","title":"Project 1: Ruby CLI Gem","date":"July 12, 2019"},"next":{"id":"e14582fe-16d1-5bc8-8924-5fa4b95526dc","excerpt":"The task for our third module project in the Flatiron bootcamp is creating an app using Ruby on Rails. Rails is a framework that used the…","slug":"/blog/ruby-on-rails/","title":"Project 3: Ruby on Rails","date":"September 16, 2019"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d55ba5a5-f2cf-58fb-bcf0-bb8a6c736369","previousId":"9b3878c0-1bdd-5fce-873c-11ebf0dd221d","nextId":"e14582fe-16d1-5bc8-8924-5fa4b95526dc"}}}